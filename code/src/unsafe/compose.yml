networks:
  local-testnet:
    name: local-testnet
    driver: bridge
    ipam:
      config:
        - subnet: ${NET_ID:-172.20.0.0/16}

services:
  plcsiemens:
    build:
      context: ./PLCsiemens
      dockerfile: Dockerfile
    container_name: ${PLCSIEMENS_CONTAINER_NAME:-local-plcsiemens}
    healthcheck:
      test: ["CMD", "/usr/bin/true"]
      start_period: 3s
    environment:
      PLCSIEMENS_PORT: ${PLCSIEMENS_PORT:-102}
      PLCOMRON_ADDRESS: ${PLCOMRON_ADDRESS:-192.168.3.1}
      PLCOMRON_PORT: ${PLCOMRON_PORT:-9600}
      PROCESSING_FAILURE_RATE: ${PROCESSING_FAILURE_RATE:-0.15}
      QUALITY_ASSURANCE_FAILURE_RATE: ${QUALITY_ASSURANCE_FAILURE_RATE:-0.18}
      DISCARDING_OR_SENDING_FAILURE_RATE: ${DISCARDING_OR_SENDING_FAILURE_RATE:-0.11}
      DEFECT_RATE: ${DEFECT_RATE:-0.24}
      MEMORY_AREA_SIZE: ${MEMORY_AREA_SIZE:-8}
      DATA_BLOCK_NUMBER: ${DATA_BLOCK_NUMBER:-5}
      SLEEP_TIME: ${SLEEP_TIME:-0.95}
    networks:
      local-testnet:
        ipv4_address: ${PLCSIEMENS_ADDRESS:-172.20.1.1}
    command: ["python3", "PLCsiemens.py"]

  plcbeckhoff:
    build:
      context: ./PLCbeckhoff
      dockerfile: Dockerfile
    container_name: ${PLCBECKHOFF_CONTAINER_NAME:-local-plcbeckhoff}
    healthcheck:
      test: ["CMD", "/usr/bin/true"]
      start_period: 5s
    environment:
      PLCBECKHOFF_ADDRESS: ${PLCBECKHOFF_ADDRESS:-172.20.2.1}
      PLCBECKHOFF_PORT: ${PLCBECKHOFF_PORT:-502}
      PICKING_FAILURE_RATE: ${PICKING_FAILURE_RATE:-0}
      PLIER_FAILURE_RATE: ${PLIER_FAILURE_RATE:-0}
      RELEASING_FAILURE_RATE: ${RELEASING_FAILURE_RATE:-0}
      PRODUCT_ARRIVAL_RATE: ${PRODUCT_ARRIVAL_RATE:-2}
      BOX_ARRIVAL_RATE: ${BOX_ARRIVAL_RATE:-0.33333}
      PHYSICAL_INPUT_NUMBER: ${PHYSICAL_INPUT_NUMBER:-10}
      PHYSICAL_OUTPUT_NUMBER: ${PHYSICAL_OUTPUT_NUMBER:-10}
      MERKER_REGISTER_NUMBER: ${MERKER_REGISTER_NUMBER:-10}
      HOLDING_REGISTER_NUMBER: ${HOLDING_REGISTER_NUMBER:-4}
    networks:
      local-testnet:
        ipv4_address: ${PLCBECKHOFF_ADDRESS:-172.20.2.1}
    command: ["python3", "PLCbeckhoff.py"]
      
  hmisiemens:
    build:
      context: ./HMIsiemens
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    depends_on:
      plcsiemens:
        condition: service_healthy
    environment:
      PLCSIEMENS_ADDRESS: ${PLCSIEMENS_ADDRESS:-172.20.1.1}
      PLCSIEMENS_PORT: ${PLCSIEMENS_PORT:-102}
      PLCSIEMENS_RACK: ${PLCSIEMENS_RACK:-0}
      PLCSIEMENS_SLOT: ${PLCSIEMENS_SLOT:-1}
    container_name: ${HMISIEMENS_CONTAINER_NAME:-local-hmisiemens}
    networks:
     local-testnet:
       ipv4_address: ${HMISIEMENS_ADDRESS:-172.20.1.2}
    command: ["python3", "HMIsiemens.py"]

  hmibeckhoff:
    build:
      context: ./HMIbeckhoff
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    depends_on:
      plcbeckhoff:
        condition: service_healthy
    environment:
      PLCBECKHOFF_ADDRESS: ${PLCBECKHOFF_ADDRESS:-172.20.2.1}
      PLCBECKHOFF_PORT: ${PLCBECKHOFF_PORT:-502}
    container_name: ${HMIBECKHOFF_CONTAINER_NAME:-local-hmibeckhoff}
    networks:
     local-testnet:
       ipv4_address: ${HMIBECKHOFF_ADDRESS:-172.20.2.2}
    command: ["python3", "HMIbeckhoff.py"]
 
  attacker:
    build:
      context: ./Attacker
      dockerfile: Dockerfile
    environment:
      PLCOMRON_ADDRESS: ${PLCOMRON_ADDRESS:-192.168.3.1}
      PLCOMRON_PORT: ${PLCOMRON_PORT:-9600}
    container_name: ${ATTACKER_CONTAINER_NAME:-local-attacker}
    networks:
      local-testnet:
    profiles: ["no-auto-start"] 
    command: ["python3", "Attacker.py"]